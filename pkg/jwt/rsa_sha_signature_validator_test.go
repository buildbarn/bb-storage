package jwt_test

import (
	"crypto/rsa"
	"crypto/x509"
	"encoding/pem"
	"testing"

	"github.com/buildbarn/bb-storage/pkg/jwt"
	"github.com/stretchr/testify/require"
)

func TestRSASHASignatureValidator(t *testing.T) {
	block, _ := pem.Decode([]byte(`-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu1SU1LfVLPHCozMxH2Mo
4lgOEePzNm0tRgeLezV6ffAt0gunVTLw7onLRnrq0/IzW7yWR7QkrmBL7jTKEn5u
+qKhbwKfBstIs+bMY2Zkp18gnTxKLxoS2tFczGkPLPgizskuemMghRniWaoLcyeh
kd3qqGElvW/VDL5AaWTg0nLVkjRo9z+40RQzuVaE8AkAFmxZzow3x+VJYKdjykkJ
0iT9wCS0DRTXu269V264Vf/3jvredZiKRkgwlL9xNAwxXFg0x/XFw005UWVRIkdg
cKWTjpBP2dPwVZ4WWC+9aGVd+Gyn1o0CLelf4rEjGoXbAAEgAqeGUxrcIlbjXfbc
mwIDAQAB
-----END PUBLIC KEY-----`))
	require.NotNil(t, block)
	key, err := x509.ParsePKIXPublicKey(block.Bytes)
	require.NoError(t, err)
	signatureValidator := jwt.NewRSASHASignatureValidator(key.(*rsa.PublicKey))

	// Algorithm "ES256" uses ECDSA; not RSA. Validation should fail.
	require.False(t, signatureValidator.ValidateSignature(
		"ES256",
		"",
		"eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0",
		[]byte{
			// R.
			0xb7, 0x28, 0x7e, 0x55, 0xfb, 0xb3, 0x23, 0x10,
			0xb2, 0x19, 0x80, 0xe5, 0x90, 0x10, 0x3b, 0x0d,
			0xfc, 0xa3, 0xae, 0xa9, 0x92, 0x1e, 0xee, 0xa9,
			0x43, 0x68, 0x68, 0x66, 0xe1, 0x6a, 0x51, 0x22,
			// S.
			0xcf, 0x35, 0x8d, 0x8d, 0xd2, 0x6a, 0x47, 0x6f,
			0x79, 0xe4, 0xe4, 0xad, 0x7b, 0x1d, 0x63, 0xff,
			0xdd, 0xc6, 0x07, 0x07, 0x0e, 0xc0, 0x84, 0x76,
			0xa5, 0x7b, 0x9c, 0x24, 0xcb, 0xaf, 0xac, 0x54,
		}))

	// RSA with SHA-256, both with a valid and invalid signature.
	require.True(t, signatureValidator.ValidateSignature(
		"RS256",
		"",
		"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0",
		[]byte{
			0x34, 0x75, 0x5a, 0x61, 0xed, 0xba, 0x31, 0xbb,
			0x4e, 0x62, 0x14, 0x8a, 0x92, 0x82, 0x98, 0x74,
			0x55, 0x68, 0x9a, 0x0e, 0x22, 0xf1, 0x92, 0x5d,
			0xf3, 0xff, 0x91, 0x53, 0xc5, 0x4d, 0x6d, 0xfb,
			0x5c, 0xe1, 0x34, 0x8c, 0x6f, 0x86, 0xd7, 0x3f,
			0x79, 0x77, 0x62, 0x53, 0x56, 0x00, 0x2c, 0x32,
			0x5c, 0xf1, 0x9f, 0x7f, 0x3e, 0x5a, 0x5c, 0x77,
			0x3a, 0x96, 0xdc, 0xb5, 0x63, 0x6b, 0x78, 0x49,
			0x64, 0x6a, 0x1a, 0xd7, 0xab, 0x6a, 0x0b, 0x15,
			0x75, 0x9b, 0x9f, 0x0e, 0x7e, 0x41, 0x96, 0x72,
			0x65, 0xf6, 0x97, 0x51, 0xfe, 0x47, 0x55, 0x15,
			0x4b, 0x2b, 0x6b, 0x6a, 0xd6, 0x28, 0x4a, 0x1f,
			0x91, 0x97, 0x88, 0x0b, 0x8c, 0x96, 0xca, 0xd1,
			0x39, 0xf2, 0xc3, 0x08, 0x8a, 0x1b, 0xe8, 0xf4,
			0x7d, 0x52, 0x72, 0x69, 0x95, 0xc0, 0x17, 0x10,
			0x3f, 0xa5, 0xc4, 0x4e, 0xa6, 0x1d, 0xd1, 0xa4,
			0x87, 0xa7, 0x58, 0x0e, 0x6b, 0xd4, 0x5d, 0x50,
			0xf0, 0xef, 0xa1, 0x74, 0x39, 0xa2, 0xac, 0xa0,
			0x4e, 0xa5, 0x6d, 0xc5, 0xa0, 0xeb, 0xeb, 0x05,
			0x05, 0x2a, 0xb2, 0x88, 0xb6, 0x00, 0x4c, 0xcd,
			0x62, 0x1d, 0x35, 0x9e, 0xb2, 0xec, 0xef, 0x44,
			0xd0, 0x38, 0x44, 0x3d, 0x36, 0xc4, 0xf6, 0xb7,
			0xc1, 0xa3, 0xa2, 0x93, 0x16, 0xc1, 0xc0, 0x66,
			0x73, 0x20, 0xe2, 0x4e, 0xbc, 0x08, 0x3a, 0x76,
			0xc2, 0x86, 0x08, 0x69, 0x76, 0xe6, 0x61, 0x35,
			0x9c, 0xbd, 0xbc, 0xc8, 0xb8, 0x73, 0xbb, 0xff,
			0x7e, 0xc6, 0x4f, 0xbf, 0x57, 0x74, 0x8c, 0x24,
			0x9b, 0xde, 0x50, 0x27, 0xb8, 0x58, 0x0b, 0xd4,
			0x62, 0xc2, 0xb5, 0x7b, 0x99, 0xeb, 0x1b, 0x63,
			0x83, 0xc0, 0x6a, 0x11, 0x11, 0x25, 0xac, 0x27,
			0xb6, 0x1a, 0x34, 0x9b, 0x2f, 0x78, 0xd9, 0x78,
			0x5e, 0x54, 0xb9, 0x86, 0xc0, 0xb3, 0x01, 0x91,
		}))
	require.False(t, signatureValidator.ValidateSignature(
		"RS256",
		"",
		"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0",
		[]byte{
			0x25, 0x7e, 0x03, 0x4d, 0x2a, 0x4d, 0x94, 0xfc,
			0xed, 0x26, 0x0b, 0x46, 0xaf, 0xcf, 0x07, 0x1f,
			0x55, 0xa8, 0x8c, 0xec, 0x41, 0xde, 0x48, 0xe2,
			0x73, 0x2c, 0xe4, 0x8c, 0xd3, 0x46, 0x3f, 0x81,
			0xfc, 0xc3, 0x00, 0x74, 0x3e, 0xd4, 0xf6, 0x6d,
			0x62, 0x38, 0xf2, 0xaa, 0x7a, 0x9f, 0xb9, 0x1c,
			0x14, 0x29, 0xe0, 0x85, 0x69, 0xeb, 0x00, 0xf3,
			0x46, 0x5c, 0xcd, 0xd5, 0x59, 0x7f, 0x1a, 0x82,
			0x75, 0xfb, 0x91, 0x5f, 0x8e, 0x3d, 0xdc, 0x4a,
			0x96, 0xf8, 0x95, 0xf5, 0x88, 0xc4, 0x6f, 0x6d,
			0x99, 0xa7, 0x1a, 0x6a, 0x11, 0xb9, 0x73, 0x0a,
			0x91, 0x77, 0x23, 0x48, 0x40, 0x80, 0xcc, 0xf3,
			0x4f, 0x26, 0x55, 0xf7, 0x07, 0xc9, 0xb2, 0xa0,
			0xed, 0x1b, 0x48, 0x4b, 0x8e, 0x41, 0x57, 0x64,
			0x3d, 0x73, 0xce, 0xed, 0xb8, 0x8c, 0x6f, 0x9c,
			0x87, 0x75, 0xa0, 0xb8, 0xa2, 0xa3, 0x5a, 0x89,
			0x02, 0x04, 0xdf, 0xa3, 0x72, 0xe5, 0x78, 0x29,
			0xbf, 0xa3, 0x10, 0x43, 0xfd, 0x26, 0x57, 0x58,
			0x9a, 0x9f, 0x24, 0x83, 0xfe, 0xe4, 0x7e, 0xda,
			0xc8, 0xd7, 0xdc, 0x85, 0xcd, 0x81, 0xdb, 0x50,
			0x3e, 0x59, 0xbf, 0x78, 0x4d, 0xe7, 0x9f, 0xe2,
			0x73, 0xb5, 0x72, 0x8a, 0x3d, 0xbd, 0xae, 0xb2,
			0x06, 0x0c, 0x6a, 0x80, 0x28, 0x42, 0xf9, 0xf4,
			0xb6, 0x1a, 0x41, 0x84, 0x23, 0x0d, 0x61, 0x28,
			0x37, 0xa6, 0xf4, 0x4c, 0x8d, 0xd0, 0x2f, 0x9f,
			0x71, 0xc1, 0xb4, 0x14, 0x11, 0x52, 0x12, 0x63,
			0xcd, 0xf3, 0xe0, 0xb7, 0xf5, 0x52, 0xd3, 0x38,
			0xd9, 0xdb, 0x56, 0x93, 0xdc, 0x36, 0x8d, 0xca,
			0x7b, 0x6d, 0x75, 0xae, 0xe5, 0x60, 0x0d, 0xd8,
			0xfe, 0xd4, 0x71, 0xb9, 0x03, 0x43, 0xca, 0xa6,
			0xc7, 0xbd, 0x8a, 0x20, 0xb2, 0x7d, 0x6e, 0x69,
			0x9b, 0xaf, 0x56, 0x77, 0xa8, 0xe0, 0x8c, 0x57,
		}))

	// RSA with SHA-384, both with a valid and invalid signature.
	require.True(t, signatureValidator.ValidateSignature(
		"RS384",
		"",
		"eyJhbGciOiJSUzM4NCIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0",
		[]byte{
			0xa3, 0x58, 0x42, 0xd7, 0x16, 0x1b, 0x26, 0x89,
			0x52, 0xca, 0x1d, 0x3e, 0x6c, 0xe6, 0x36, 0xdf,
			0x4c, 0x36, 0xdb, 0x31, 0x10, 0x4a, 0x4e, 0x53,
			0x88, 0x17, 0xdc, 0xf8, 0xe0, 0xaf, 0xb6, 0x92,
			0x36, 0x26, 0xd6, 0x25, 0x5b, 0xed, 0xb7, 0xfb,
			0xc0, 0x78, 0xf0, 0xda, 0x40, 0x4e, 0x8c, 0xf3,
			0x30, 0x79, 0xf4, 0x8f, 0x7a, 0xc4, 0xd3, 0x15,
			0x54, 0x95, 0xdc, 0x52, 0x87, 0x3c, 0xb4, 0xc5,
			0xe2, 0x7b, 0xbd, 0x80, 0x1c, 0x71, 0x55, 0xee,
			0xd8, 0x6b, 0x3d, 0xae, 0x74, 0xd5, 0xaa, 0x8b,
			0x9c, 0xf9, 0x46, 0x6e, 0xff, 0x02, 0x47, 0x91,
			0x98, 0x8a, 0x04, 0xbe, 0xbb, 0x8f, 0xcf, 0xfa,
			0xd4, 0xbe, 0x92, 0x5e, 0xcc, 0x33, 0x3c, 0x04,
			0x2e, 0xe2, 0x45, 0x43, 0xc0, 0x07, 0x9f, 0x19,
			0xfe, 0x61, 0xc9, 0x80, 0x54, 0x33, 0xef, 0x34,
			0xbd, 0x86, 0x70, 0x58, 0xf1, 0x29, 0x2c, 0x8f,
			0x0a, 0xe3, 0x20, 0x81, 0xb0, 0x5e, 0x88, 0xf4,
			0xdd, 0x72, 0x41, 0xa6, 0x40, 0x26, 0x69, 0x0c,
			0xa7, 0xf2, 0x30, 0xdf, 0xbd, 0x4c, 0x7a, 0x76,
			0x9e, 0xe0, 0xca, 0x78, 0x26, 0xeb, 0x2f, 0x04,
			0x94, 0xbe, 0xb3, 0xa2, 0xeb, 0x98, 0x6d, 0x90,
			0x6e, 0x26, 0x5a, 0x15, 0xac, 0x55, 0x26, 0x25,
			0xbc, 0x2a, 0x55, 0x24, 0x5b, 0x25, 0x02, 0x9e,
			0xcf, 0x3e, 0xa8, 0x59, 0x79, 0x38, 0xc7, 0x98,
			0x96, 0x01, 0x85, 0xb3, 0x2b, 0xef, 0x48, 0x7b,
			0xd7, 0x0b, 0x34, 0x2b, 0xb0, 0x45, 0xea, 0xc8,
			0x27, 0x52, 0xe2, 0xd4, 0x09, 0x77, 0xbd, 0xda,
			0xc9, 0x80, 0x38, 0x48, 0xfb, 0x42, 0x6f, 0xd7,
			0x25, 0xcf, 0xbe, 0x8d, 0xd7, 0x31, 0x39, 0x5a,
			0xc5, 0x78, 0x67, 0x40, 0x58, 0xaf, 0x17, 0x9b,
			0xef, 0xba, 0x00, 0xee, 0x32, 0x61, 0x87, 0xdf,
			0x78, 0x44, 0x03, 0xf3, 0x08, 0x6d, 0x21, 0x99,
		}))
	require.False(t, signatureValidator.ValidateSignature(
		"RS384",
		"",
		"eyJhbGciOiJSUzM4NCIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0",
		[]byte{
			0x86, 0x0d, 0x70, 0xc5, 0x6d, 0x52, 0x1c, 0xa2,
			0x9b, 0x87, 0xd7, 0x97, 0xbb, 0xe2, 0x4e, 0x0a,
			0xa9, 0xe2, 0x30, 0x26, 0x9d, 0xe2, 0xfe, 0x2f,
			0xf0, 0x0f, 0xa9, 0x72, 0x75, 0x87, 0x0f, 0x7e,
			0x6f, 0xbb, 0x5b, 0x40, 0xa1, 0xbb, 0x7b, 0x8e,
			0xbd, 0x8f, 0xbc, 0xa5, 0x67, 0xd1, 0x70, 0xfc,
			0x49, 0xb4, 0x8e, 0xfc, 0xe0, 0x3f, 0xfc, 0xec,
			0x12, 0x38, 0x8a, 0x88, 0x55, 0xef, 0x9c, 0x2e,
			0xa4, 0xa7, 0x39, 0x00, 0xc1, 0xe3, 0xad, 0x82,
			0x5f, 0x89, 0x98, 0x02, 0x68, 0x2b, 0xbc, 0x07,
			0xc1, 0xce, 0x47, 0xd2, 0x40, 0x67, 0x84, 0x0f,
			0x35, 0x24, 0x51, 0x46, 0xbe, 0xef, 0x8d, 0xec,
			0x78, 0xe6, 0x9e, 0x08, 0x86, 0xde, 0x78, 0x1a,
			0xfe, 0xeb, 0x83, 0xd3, 0x6e, 0xfc, 0x6e, 0x09,
			0xff, 0xa5, 0x2b, 0x2b, 0x73, 0xec, 0x42, 0x8d,
			0x92, 0xe3, 0x83, 0x14, 0x5c, 0xa1, 0x02, 0x75,
			0xa0, 0xdf, 0xe3, 0x1d, 0x59, 0x8c, 0xdc, 0xae,
			0xac, 0x1e, 0x23, 0xbd, 0x84, 0x05, 0x70, 0x64,
			0xfe, 0x86, 0x82, 0x9f, 0xf4, 0x43, 0x45, 0x87,
			0x41, 0xa6, 0xbe, 0xa5, 0x5c, 0xf5, 0x73, 0x8e,
			0x7e, 0x40, 0x18, 0x80, 0x0a, 0xb0, 0x18, 0x71,
			0x2c, 0x02, 0x00, 0xf9, 0xd7, 0x93, 0xd5, 0x68,
			0x75, 0x38, 0x17, 0xe1, 0x66, 0xae, 0x21, 0x9f,
			0x6d, 0xbb, 0x3d, 0xff, 0x47, 0xfc, 0x4b, 0x9e,
			0x4f, 0x9d, 0xb1, 0x6f, 0xa8, 0x31, 0x49, 0x3b,
			0xd8, 0xe1, 0x83, 0xcd, 0x4c, 0x36, 0xf6, 0x8d,
			0x36, 0x9a, 0x73, 0x54, 0x7b, 0x72, 0x29, 0xd7,
			0x41, 0xa3, 0x94, 0xbf, 0x38, 0xb4, 0xbb, 0x77,
			0xf0, 0x68, 0x4c, 0xe2, 0x41, 0xe2, 0x07, 0xba,
			0x65, 0xd1, 0x1e, 0x76, 0xd2, 0xbc, 0x4d, 0xf8,
			0x65, 0x5e, 0xf2, 0x21, 0xd1, 0x45, 0x4d, 0xe1,
			0x04, 0xda, 0xbe, 0x15, 0x8b, 0x43, 0x1f, 0x19,
		}))

	// RSA with SHA-512, both with a valid and invalid signature.
	require.True(t, signatureValidator.ValidateSignature(
		"RS512",
		"",
		"eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0",
		[]byte{
			0x8d, 0x85, 0xb4, 0xe3, 0x32, 0xc3, 0x1d, 0xf4,
			0x75, 0xbf, 0xbc, 0x5d, 0xad, 0x6d, 0xe5, 0x08,
			0x66, 0x6b, 0x30, 0x8b, 0x15, 0x7b, 0x4b, 0xd6,
			0x09, 0xf5, 0x64, 0x37, 0x60, 0xd1, 0x9e, 0xcd,
			0x9c, 0xdc, 0xc3, 0x7e, 0x99, 0xca, 0x7f, 0xf9,
			0x11, 0x3a, 0x4c, 0xdf, 0x6e, 0x99, 0x20, 0x58,
			0xa0, 0xd5, 0x7e, 0x9a, 0x76, 0xf7, 0xd7, 0x01,
			0x5f, 0xf2, 0x2b, 0xa7, 0xdd, 0xf0, 0x7a, 0x68,
			0x34, 0xba, 0x9b, 0xf3, 0x97, 0x02, 0x25, 0x11,
			0x54, 0x42, 0xab, 0x3c, 0x53, 0x46, 0x95, 0x1d,
			0xfc, 0x25, 0x21, 0xd4, 0xb6, 0xc1, 0x73, 0xa9,
			0x33, 0xa3, 0xfb, 0x01, 0x6b, 0x25, 0x93, 0x78,
			0x47, 0x0b, 0xd9, 0x9c, 0xd1, 0x92, 0x32, 0xf2,
			0xb7, 0xc3, 0x3c, 0xd4, 0xae, 0x26, 0x6a, 0x9a,
			0x23, 0x4b, 0xb0, 0x6f, 0x25, 0x92, 0xd9, 0x44,
			0x9f, 0xa2, 0x80, 0xe2, 0x46, 0x15, 0x68, 0xce,
			0xb5, 0xfc, 0xda, 0x66, 0x3c, 0x75, 0x80, 0x8c,
			0x61, 0x31, 0x5a, 0xfe, 0xdc, 0x8c, 0x76, 0x2e,
			0xa5, 0xc8, 0xcc, 0x4a, 0x64, 0x7c, 0xb8, 0xc4,
			0xf0, 0x37, 0x95, 0x2e, 0x03, 0x08, 0x16, 0xe8,
			0x54, 0x6c, 0xb4, 0x22, 0x44, 0x7e, 0x8c, 0x70,
			0x6f, 0x45, 0x8a, 0x8b, 0x2a, 0x1a, 0x4a, 0x50,
			0xee, 0x22, 0x21, 0xd9, 0x27, 0x47, 0x32, 0x1a,
			0x18, 0x44, 0x9a, 0x60, 0x0f, 0x88, 0x2c, 0x2d,
			0x3c, 0x0c, 0x06, 0x79, 0xa2, 0xf5, 0xc9, 0x93,
			0x1c, 0xa7, 0x4a, 0x7c, 0xd9, 0xca, 0x53, 0x43,
			0x94, 0x1b, 0xfb, 0xb0, 0xad, 0x46, 0x8b, 0xf7,
			0x37, 0x80, 0xdc, 0x38, 0x78, 0x16, 0x62, 0x4e,
			0x8b, 0xa2, 0x63, 0xd1, 0xe6, 0x3e, 0x5c, 0x0a,
			0x47, 0x8f, 0x03, 0x3f, 0x3b, 0x76, 0xea, 0xb2,
			0xcd, 0x23, 0x29, 0x08, 0x1d, 0x26, 0x08, 0xeb,
			0x84, 0xdc, 0x25, 0x36, 0x54, 0xcb, 0x46, 0x79,
		}))
	require.False(t, signatureValidator.ValidateSignature(
		"RS512",
		"",
		"eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0",
		[]byte{
			0x18, 0x6a, 0x31, 0xc7, 0xab, 0xea, 0x89, 0x80,
			0xc6, 0x1a, 0x6f, 0xb1, 0x49, 0x82, 0xbc, 0x49,
			0xd1, 0x6d, 0x0d, 0xb0, 0xa3, 0x42, 0x35, 0xad,
			0x8e, 0x64, 0x6d, 0xba, 0x7e, 0x45, 0x00, 0xd1,
			0x33, 0x45, 0x0f, 0xb6, 0xf2, 0xca, 0x0c, 0xaa,
			0xac, 0x07, 0x11, 0x02, 0xb6, 0x49, 0xc6, 0x9c,
			0x42, 0x2f, 0x75, 0x04, 0xc6, 0x46, 0xca, 0xa2,
			0x6e, 0x42, 0x27, 0xf3, 0x51, 0x64, 0x29, 0x11,
			0xa0, 0x5e, 0xe7, 0x04, 0x75, 0x7a, 0xd2, 0x9f,
			0xb8, 0x8e, 0x8b, 0x4a, 0x4e, 0x33, 0xe4, 0x5c,
			0x37, 0xea, 0xdc, 0x6b, 0x1a, 0x98, 0xc1, 0x18,
			0x96, 0xc8, 0x39, 0x16, 0x90, 0x4e, 0xbe, 0x2b,
			0xd2, 0x93, 0xba, 0x9e, 0x8d, 0xdc, 0x6d, 0x31,
			0x5d, 0x0f, 0xae, 0xea, 0xa0, 0x23, 0xd1, 0xa3,
			0xaa, 0x27, 0x10, 0x4c, 0x3d, 0x23, 0x58, 0x3c,
			0xba, 0xd5, 0x41, 0xa7, 0x61, 0x76, 0xc7, 0xdd,
			0x98, 0x4b, 0x46, 0x42, 0xee, 0x93, 0x89, 0x5a,
			0x0f, 0x1f, 0x7f, 0xb4, 0x76, 0x3d, 0x17, 0x40,
			0x24, 0x66, 0xa3, 0x84, 0xdf, 0x72, 0x00, 0x46,
			0x33, 0x79, 0xb5, 0x76, 0xc6, 0x56, 0x3f, 0xbb,
			0xf0, 0xe8, 0xc9, 0x23, 0xcb, 0x43, 0x09, 0x35,
			0x6c, 0x64, 0xf8, 0xc6, 0x1c, 0xfd, 0x8b, 0x37,
			0xfb, 0xc8, 0x68, 0xcf, 0xa9, 0xb1, 0xfd, 0xbe,
			0x2c, 0x24, 0x3b, 0xc9, 0x8b, 0xeb, 0x4e, 0x5f,
			0x3c, 0x50, 0x35, 0x78, 0xb8, 0x7d, 0xc8, 0x34,
			0x69, 0x99, 0xd1, 0xac, 0x16, 0x6c, 0x4f, 0x4d,
			0xaf, 0xcb, 0xf9, 0xc9, 0xe9, 0x8e, 0x31, 0x12,
			0xde, 0xad, 0x13, 0xf2, 0xca, 0xe8, 0x45, 0xe4,
			0x24, 0xd0, 0x13, 0x1a, 0x90, 0xb5, 0x15, 0xc1,
			0x83, 0x51, 0xf3, 0x31, 0xa3, 0x0a, 0xb6, 0x82,
			0x21, 0x5d, 0x0e, 0x9c, 0xf2, 0x7d, 0x07, 0x0f,
			0x54, 0x13, 0xc7, 0xef, 0xe0, 0x25, 0xec, 0xe5,
		}))
}
