load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "replication",
    srcs = [
        "blob_replicator.go",
        "concurrency_limiting_blob_replicator.go",
        "deduplicating_blob_replicator.go",
        "local_blob_replicator.go",
        "metrics_blob_replicator.go",
        "nested_blob_replicator.go",
        "noop_blob_replicator.go",
        "queued_blob_replicator.go",
        "remote_blob_replicator.go",
        "replicator_server.go",
        "with_blob_replicator.go",
    ],
    importpath = "github.com/buildbarn/bb-storage/pkg/blobstore/replication",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/blobstore",
        "//pkg/blobstore/buffer",
        "//pkg/blobstore/slicing",
        "//pkg/clock",
        "//pkg/digest",
        "//pkg/proto/replicator",
        "//pkg/util",
        "@bazel_remote_apis//build/bazel/remote/execution/v2:remote_execution_go_proto",
        "@com_github_prometheus_client_golang//prometheus",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//encoding/protowire",
        "@org_golang_google_protobuf//types/known/emptypb",
        "@org_golang_x_sync//semaphore",
    ],
)

go_test(
    name = "replication_test",
    srcs = [
        "deduplicating_blob_replicator_test.go",
        "local_blob_replicator_test.go",
        "nested_blob_replicator_test.go",
        "queued_blob_replicator_test.go",
    ],
    deps = [
        ":replication",
        "//internal/mock",
        "//pkg/blobstore/buffer",
        "//pkg/digest",
        "//pkg/eviction",
        "//pkg/testutil",
        "@bazel_remote_apis//build/bazel/remote/execution/v2:remote_execution_go_proto",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_uber_go_mock//gomock",
    ],
)
