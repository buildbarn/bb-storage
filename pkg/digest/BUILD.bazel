load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "digest",
    srcs = [
        "bare_function.go",
        "configuration.go",
        "digest.go",
        "existence_cache.go",
        "function.go",
        "instance_name.go",
        "instance_name_patcher.go",
        "instance_name_trie.go",
        "set.go",
        "set_builder.go",
    ],
    importpath = "github.com/buildbarn/bb-storage/pkg/digest",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/clock",
        "//pkg/digest/sha256tree",
        "//pkg/eviction",
        "//pkg/proto/configuration/digest",
        "//pkg/util",
        "@bazel_remote_apis//build/bazel/remote/execution/v2:remote_execution_go_proto",
        "@com_github_google_uuid//:uuid",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)

go_test(
    name = "digest_test",
    srcs = [
        "digest_test.go",
        "existence_cache_test.go",
        "generator_test.go",
        "instance_name_patcher_test.go",
        "instance_name_test.go",
        "instance_name_trie_test.go",
        "set_builder_test.go",
        "set_test.go",
    ],
    deps = [
        ":digest",
        "//internal/mock",
        "//pkg/eviction",
        "//pkg/testutil",
        "@bazel_remote_apis//build/bazel/remote/execution/v2:remote_execution_go_proto",
        "@com_github_google_uuid//:uuid",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_uber_go_mock//gomock",
    ],
)
