syntax = "proto3";

package buildbarn.http.oidc;

import "github.com/buildbarn/bb-storage/pkg/proto/auth/auth.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/buildbarn/bb-storage/pkg/proto/http/oidc";

// The unencrypted payload of the cookie containing session state that
// is managed by OIDCAuthenticator.
message CookieValue {
  message Authenticating {
    // The value of query parameter "state" that was provided to the
    // authorization endpoint URL. Its value is checked when the
    // redirect URL is requested.
    bytes state_verifier = 1;

    // The page that was attempted to be requested when a redirect to
    // the authorization endpoint URL took place. The user will be
    // redirected back to this page upon success.
    string original_request_uri = 2;

    // The value that was used to compute the code challenge that was
    // provided to the authorization endpoint URL. It is used to implement
    // PKCE (RFC 7636) and is sent to the token endpoint URL when
    // exchanging the authorization code for an access token.
    string code_verifier = 3;
  }

  message Authenticated {
    // The authentication metadata that is computed from the claims
    // returned by the user info endpoint.
    buildbarn.auth.AuthenticationMetadata authentication_metadata = 1;

    // The time at which the access token that was used to obtain the
    // authentication metadata expires.
    google.protobuf.Timestamp expiration = 2;

    // If set, a refresh token that may be used to obtain a new access
    // token and updated claims after the current access token expires.
    string refresh_token = 3;

    // The expiration duration to use if the next token refresh does not
    // return "expires_in" explicitly.
    google.protobuf.Duration default_expiration = 4;
  }

  oneof session_state {
    // The user was redirected to the authorization endpoint URL.
    Authenticating authenticating = 1;

    // Successfully obtained an access token and claims.
    Authenticated authenticated = 2;
  }
}
