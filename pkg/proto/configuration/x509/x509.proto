syntax = "proto3";

package buildbarn.configuration.x509;

option go_package = "github.com/buildbarn/bb-storage/pkg/proto/configuration/x509";

message ClientCertificateVerifierConfiguration {
  // PEM data for the certificate authorities that should be used to
  // validate the client.
  string client_certificate_authorities = 1;

  // This option allows specifying a boolean JMESPath expression that
  // can be used to place additional requirements on alt names within
  // the client certificates.
  //
  // The context data has the following structure:
  //
  // {
  //    // Contains every DNS Subject Alt Name provided.
  //   "dnsNames": ["example.com", "*.sub.example.com"],
  //
  //   // Contains every Email Subject Alt Name provided.
  //   "emailAddresses": ["me@example.com"],
  //
  //   // Contains every URI Subject Alt Name provided.
  //   "uris": ["uri:example:a"]
  // }
  //
  // You could enforce that the DNS name matches an expression:
  //
  //     contains(dnsNames, "example.com")
  //
  // Or to enforce that an expected email address is present:
  //
  //     length(emailAddresses[?ends_with(@, '@example.com')]) > `0`
  //
  //
  // In case no additional requirements need to be made, it is possible to
  // use the following JMESPath expression (including the backticks):
  //
  //     `true`
  //
  // More details about JMESPath can be found at https://jmespath.org/.
  //
  // It is recommended that this feature is only used for making
  // authentication decisions; not authorization decisions. The reason
  // being that validation failures will cause gRPC requests to fail
  // with code UNAUTHENTICATED, not PERMISSION_DENIED.
  string validation_jmespath_expression = 2;

  // JMESPath expression for converting certificates information to a
  // Protobuf message of type buildbarn.auth.AuthenticationMetadata.
  // The resulting metadata can be used for purposes such as authorization.
  //
  // The context data has the same structure seen in
  // `validation_jmespath_expression`.
  //
  // The following expression can be used if no metadata needs to be
  // extracted from the token (including the backticks):
  //
  //     `{}`
  string metadata_extraction_jmespath_expression = 3;
}
