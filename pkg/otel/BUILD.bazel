load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "otel",
    srcs = [
        "active_spans_reporting_http_handler.go",
        "grpc_otlp_trace_client.go",
        "key_value.go",
        "maximum_rate_sampler.go",
        "w3c_trace_context.go",
    ],
    embedsrcs = [
        "active_spans.html",
        "stylesheet.css",
    ],
    importpath = "github.com/buildbarn/bb-storage/pkg/otel",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/clock",
        "@io_opentelemetry_go_otel//attribute",
        "@io_opentelemetry_go_otel//codes",
        "@io_opentelemetry_go_otel//propagation",
        "@io_opentelemetry_go_otel_exporters_otlp_otlptrace//:otlptrace",
        "@io_opentelemetry_go_otel_sdk//trace",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@io_opentelemetry_go_proto_otlp//collector/trace/v1:trace",
        "@io_opentelemetry_go_proto_otlp//common/v1:common",
        "@io_opentelemetry_go_proto_otlp//trace/v1:trace",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)

go_test(
    name = "otel_test",
    srcs = [
        "active_spans_reporting_http_handler_test.go",
        "key_value_test.go",
        "maximum_rate_sampler_test.go",
        "w3c_trace_context_test.go",
    ],
    embedsrcs = ["stylesheet.css"],
    deps = [
        ":otel",
        "//internal/mock",
        "//pkg/testutil",
        "@com_github_golang_mock//gomock",
        "@com_github_stretchr_testify//require",
        "@io_opentelemetry_go_otel//attribute",
        "@io_opentelemetry_go_otel//codes",
        "@io_opentelemetry_go_otel_sdk//trace",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@io_opentelemetry_go_proto_otlp//common/v1:common",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)

# Create a copy of Bootstrap that only contains the style attributes
# used by the HTML template.
genrule(
    name = "stylesheet",
    srcs = [
        "@com_github_twbs_bootstrap//:css/bootstrap.min.css",
        "active_spans.html",
    ],
    outs = ["stylesheet.css"],
    cmd = "$(location @npm//purgecss/bin:purgecss) --css $(location @com_github_twbs_bootstrap//:css/bootstrap.min.css) --content $(location active_spans.html) --output $@",
    tools = ["@npm//purgecss/bin:purgecss"],
)
